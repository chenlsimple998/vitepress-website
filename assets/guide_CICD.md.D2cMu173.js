import{_ as r,c as a,o as n,j as e,a as t}from"./chunks/framework.BO3ojR9h.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/CICD.md","filePath":"guide/CICD.md","lastUpdated":1741169488000}'),c={name:"guide/CICD.md"};function d(l,o,s,i,p,u){return n(),a("div",null,o[0]||(o[0]=[e("p",null,"CI（持续集成）和CD（持续交付）是一种自动构建和部署代码的方法。 CI是将代码持续集成到存储库的主分支中，并对代码进行自动测试的实践。 CD可让代码达到可交付状态，这样只需单击一个按钮就可以部署这部分代码，或者在持续部署的情况下，如果所有测试都通过，则自动部署代码。 1.安装Docker",-1),e("p",null,"使用 su - 切换到 root 用户：你已经尝试并成功切换到了 root 用户，后续操作在 root 权限下进行即可。",-1),e("p",null,[t("yum install -y yum-utils yum-Config-manager --add-repo "),e("a",{href:"https://download.docker.com/linux/centos/docker-ce.repo",target:"_blank",rel:"noreferrer"},"https://download.docker.com/linux/centos/docker-ce.repo"),t(" yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker compose-plugin")],-1),e("p",null,"systemctl start docker",-1)]))}const C=r(c,[["render",d]]);export{k as __pageData,C as default};
